" vim ftw
set nocompatible

" modelines
set modelines=5

" pathogen.vim ftw
filetype off
call plug#begin('~/.vim/bundle')

let g:plug_url_format="git://github.com/%s"

Plug 'AndrewRadev/splitjoin.vim'
Plug 'Lokaltog/vim-easymotion'
Plug 'Shougo/neocomplete.vim'
Plug 'bling/vim-airline'
Plug 'depuracao/vim-rdoc'
Plug 'derekwyatt/vim-scala'
Plug 'elixir-lang/vim-elixir'
Plug 'fatih/vim-go'
Plug 'groenewege/vim-less'
Plug 'jimenezrick/vimerl'
Plug 'jlanzarotta/bufexplorer'
Plug 'junegunn/vim-easy-align'
Plug 'justmao945/vim-clang'
Plug 'juvenn/mustache.vim'
Plug 'kchmck/vim-coffee-script'
Plug 'kien/ctrlp.vim'
Plug 'majutsushi/tagbar'
Plug 'mattn/gist-vim'
Plug 'noprompt/vim-yardoc'
Plug 'rhysd/vim-clang-format'
Plug 'rking/ag.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-dotenv'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-haml'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/xorium.vim'
Plug 'wting/rust.vim'
Plug 'mileszs/ack.vim'

" Add plugins to &runtimepath
call plug#end()

" set the title in xterm
set title

" better buffer management
set hidden

" fixup backspace behavior
set backspace=indent,eol,start

let mapleader = ","
set history=1000

" searching stuff
set hlsearch
set incsearch

" Make <C-L> clear highlight and redraw
nnoremap <C-L> :nohls<CR><C-L>
inoremap <C-L> <C-O>:nohls<CR>

" ignore case only if there are no upcase letters in the search
set ignorecase
set smartcase

" <tab> completion for filenames
set wildmenu
set wildmode=list:longest
set complete-=i

" turn syntax highlighting on
syntax on

" 256 colors, colorscheme
set t_Co=256
colorscheme xorium
set vb t_vb=

filetype plugin indent on
set ruler

" Trailling spaces and tabs
set list
set listchars=tab:>-,trail:*,nbsp:*

set fileformat=unix
set nobackup

" Status Line
set statusline=%F%m%r%h%w\ [f:%{&ff}\ t:%Y]\ [A:\%03.3b\ H:\%02.2B]\ [P:%04l,%04v][%p%%]\ [LEN=%L]\ %{fugitive#statusline()}
set laststatus=2

" use bash so that rvm works
set shell=bash

" NT bindings
map <leader>n :NERDTreeToggle<CR>
map <leader>ntm :NERDTreeMirror<CR>
map <leader>ntc :NERDTreeClose<CR>
map <leader>ntf :NERDTreeFind<CR>

" disable ex mode
:map Q <Nop>

" disable ri check
:map K <Nop>

" Align bindings
" map <leader>a= to :Align = (rather than :Align := )
map <leader>a= :Align =<CR>
map <leader>ah :Align =><CR>
map <leader>a# :Align #<CR>
map <leader>a{ :Align {<CR>
map <leader>A :Align [A-Z].*<CR>:'<,'>s/\s*$//<CR><C-l>
map <leader>= ggVG=<CR>
map <leader>ct :set et <bar> retab<CR>

" Helpers
map <leader>rts %s/\v\s+$//g<CR>
map <leader>srt :!sort<CR>

" Ruby
map <leader>rs :!ruby -c %:p<CR>
map <leader>r19 :s/\v:([0-9a-z_]+)\s+\=\>\s+/\1: /g<CR>
map <leader>r18 :s/\v([0-9a-z_"']+):\s+(.*)/:\1 => \2/g<CR>

" Haml
map <leader>hs :!haml -c %:p<CR>

" Set minimum window height
set winheight=10

" ctags stuff
set tags=./tags,tags,./TAGS,TAGS

" numbers
set number

" gui stuff
set guioptions-=T
set guioptions-=r
set guioptions-=L

" Movement
nnoremap <A-h> <C-w>h
nnoremap <A-j> <C-w>j
nnoremap <A-k> <C-w>k
nnoremap <A-l> <C-w>l
nnoremap <A-s> <C-w>s
nnoremap <A-q> <C-w>q
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" grep
map <leader>a :Ack<space>
map <leader>a* :Ack<space><cword><CR>


" ctrlp
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.log,.git,*/bundle/*
let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'
map <leader>f :CtrlP<CR>
map <leader>g :CtrlPBuffer<CR>
map <leader>cf :CtrlPClearCache<CR>

" fuckups
cnoreabbrev <expr> W ((getcmdtype() is# ':' && getcmdline() is# 'W')?('w'):('W'))
cnoreabbrev <expr> Wa ((getcmdtype() is# ':' && getcmdline() is# 'Wa')?('wa'):('Wa'))
cnoreabbrev <expr> Wqa ((getcmdtype() is# ':' && getcmdline() is# 'Wqa')?('wqa'):('Wqa'))
cnoreabbrev <expr> E ((getcmdtype() is# ':' && getcmdline() is# 'E')?('e'):('E'))

" zsh and vim don't get along
set shell=bash

" Save files when vim loses focus
au FocusLost * :wa

" tabs are spaces
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab
set cursorline

" ============== File Type settings ==================

" remove trailing whitespace automatically
autocmd FileType c,cpp,java,php,ruby autocmd BufWritePre <buffer> :%s/\s\+$//e

" retab on write
autocmd FileType c,cpp,java,php,ruby autocmd BufWritePre <buffer> :set et | retab

augroup filetype_go
  autocmd!

  autocmd FileType go set tabstop=4|set shiftwidth=4|set expandtab|set autoindent|set nolist
augroup END


" vim rspec mappings
let g:rspec_runner = "os_x_iterm"
let g:rspec_command = "r {spec}"
map <Bslash>t :call RunCurrentSpecFile()<CR>
map <Bslash>s :call RunNearestSpec()<CR>
map <Bslash>l :call RunLastSpec()<CR>
map <Bslash>a :call RunAllSpecs()<CR>

nnoremap <silent> <esc> :noh<cr><esc>

" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. <Leader>aip)
nmap <Leader>l <Plug>(EasyAlign)

set shortmess=a
set cmdheight=2

nmap <silent> gl <ESC>:w<CR>:SyntasticCheck<CR>:Errors<CR>
imap <tab> esc>
